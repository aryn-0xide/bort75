#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2 
#define ADJUST 3

#define KP_MULT KP_MULTIPLY
#define KP_DIV KP_DIVIDE
#define KP_ADD KP_PLUS
#define KP_SUB KP_MINUS

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer
        {
            bindings = <
                &kp GRAVE  &kp N1     &kp N2    &kp N3    &kp N4  &kp N5     &kp KP_DIV  &kp KP_MULT  &kp KP_SUB  &kp N6     &kp N7  &kp N8     &kp N9      &kp N0    &kp BSPC
                &kp TAB    &kp Q      &kp W     &kp E     &kp R   &kp T      &kp KP_N7   &kp KP_N8    &kp KP_N9   &kp Y      &kp U   &kp I      &kp O       &kp P     &kp DEL
                &kp ESC    &kp A      &kp S     &kp D     &kp F   &kp G      &kp KP_N4   &kp KP_N5    &kp KP_N6   &kp H      &kp J   &kp K      &kp L       &kp SEMI  &kp SQT
                &kp LSHFT  &kp Z      &kp X     &kp C     &kp V   &kp B      &kp KP_N1   &kp KP_N2    &kp KP_N3   &kp N      &kp M   &kp COMMA  &kp PERIOD  &kp UP    &kp RET
                &mo ADJUST &kp LCTRL  &kp LALT  &kp LGUI  &mo LOWER   &kp SPACE  &kp KP_ADD  &kp KP_N0    &kp KP_DOT  &kp SPACE  &mo RAISE   &kp SLASH  &kp LEFT    &kp DOWN  &kp RIGHT
            >;
        };

        lower_layer {
            bindings = <
                &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &trans  &trans  &trans  &kp F6    &kp F7    &kp F8   &kp F9   &kp F10  &kp F11
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans   &trans   &trans   &kp F12    
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp UNDER &kp PLUS &kp LBRC &kp RBRC &kp PIPE 
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans   &trans   &trans   &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans   &trans   &trans   &trans    
            >;
        };

        raise_layer {
            bindings = <
                &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &trans  &trans  &trans  &kp F6  &kp F7     &kp F8       &kp F9       &kp F10    &kp F11
                &trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans  &trans  &trans  &kp N6  &kp N7     &kp N8       &kp N9       &kp N0     &kp F12
                &trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &trans  &trans  &trans  &kp F6  &kp MINUS  &kp EQUAL    &kp LBKT     &kp RBKT   &kp BSLH
                &trans  &kp F7  &kp F8  &kp F9  &kp F10 &kp F11 &trans  &trans  &trans  &kp F12 &trans     &kp PSCRN    &kp PG_DN    &kp PG_UP  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp C_PP   &trans
            >;
        };

//        adjust_layer {
//            bindings = <
//                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
//            >;
//        };


// this layer won't compile... need to double check the keycodes
        adjust_layer {
            bindings = <
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans    &trans    &trans    &kp CARET       &kp AMPS        &kp ASTRK       &kp LPAR        &kp RPAR        &ext_power EP_TOG
                &trans     &trans       &trans       &trans       &trans       &trans       &trans    &trans    &trans    &rgb_ug RGB_EFF &out OUT_USB    &rgb_ug RGB_SAI &rgb_ug RGB_SPI &rgb_ug RGB_BRI &rgb_ug RGB_TOG
                &trans     &trans       &trans       &trans       &trans       &trans       &trans    &trans    &trans    &rgb_ug RGB_EFR &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_SPD &rgb_ug RGB_BRD &trans
                &trans     &trans       &out OUT_TOG &trans       &trans       &out OUT_BLE &trans    &trans    &trans    &kp LBRC        &kp RBRC        &trans          &trans          &kp C_VOL_UP    &trans
                &trans     &trans       &trans       &trans       &trans       &trans       &trans    &trans    &trans    &trans          &trans          &trans          &kp C_PREV      &kp C_VOL_DN    &kp C_NEXT
            >;
        };

    };
};